// -*-C-*- // utilisation du mode C dans emacs

struct appdata
{
  float4 Position 	: POSITION;
  float3 Normal		: NORMAL;
  float4 DiffuseColor   : COLOR0;
  //  float2 TexCoord0      : TEXCOORD0;
};

struct vpconn
{
  float4 HPosition	: POSITION;
  float4 Color		: COLOR0;
  //  float2 TexCoord0	: TEXCOORD0;
};

vpconn SVExtrude(
		 appdata IN,
		 uniform float4x4 ModelViewProj,
		 uniform float4x4 ModelViewMatrix,
		 uniform float4   LightPos,
		 uniform float4   Fatness,
		 uniform float4   ShadowExtrudeDist
		 )
{
  vpconn OUT;

  // Transformer la position de la lumière dans le repère de l'objet
  // Create normalized vector from vertex to light
  float4 light_to_vert = normalize(IN.Position - mul(ModelViewMatrix, LightPos));
	
  // N dot L to decide if point should be move away
  // from the light to extrude the volume
  float ndotl = dot(-light_to_vert.xyz, IN.Normal.xyz);

  float4 inset_pos = (IN.Normal * Fatness.xyz + IN.Position.xyz).xyzz;
  inset_pos.w = IN.Position.w;

  // (float)(ndotl < 0) Test sur l'orientation de la facette
  float4 new_position = (light_to_vert * ShadowExtrudeDist) * (float)(ndotl < 0) + inset_pos;

  OUT.HPosition = mul(ModelViewProj, new_position);
	
  OUT.Color = float4(1.0, 0.85, 0.9, 0.5);
  //	OUT.TexCoord0.xy = IN.TexCoord0;

  return OUT;
}
